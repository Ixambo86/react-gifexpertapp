{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","categorias","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","imagen","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA3BK,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAAkB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,EAAY,CAAIE,GAAJ,mBAAmBH,MAKnC,SACI,uBACIU,KAAK,OACLC,MAAOR,EACPS,SAjBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCqBLO,EApBM,SAACf,GAAe,IAAD,EACRb,mBAAS,CACjCoB,KAAM,GACNS,SAAS,IAHuB,mBAC3BC,EAD2B,KACpBC,EADoB,KAiBlC,OAXAC,qBAAU,WACRpB,EAAQC,GAAWoB,MAAK,SAACC,GACvBC,YAAW,WACTJ,EAAS,CACPX,KAAMc,EACNL,SAAS,MAEV,UAEJ,CAAChB,IAEGiB,GClBIM,EAAc,SAAC,GAAqB,EAApBZ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKsB,UAAU,sEAAf,UACI,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,4BAAIA,QCFHe,EAAU,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,UAAgB,EAEhBe,EAAaf,GAA9BO,EAFiC,EAEjCA,KAAMS,EAF2B,EAE3BA,QAEb,OACE,qCACE,oBAAIQ,UAAU,sEAAd,SAAqFxB,IAEpFgB,GAAW,mBAAGQ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACGjB,EAAKE,KAAI,SAACmB,GAAD,OACR,cAAC,EAAD,eAAiCA,GAAfA,EAAOjB,aCiBpBkB,EA9BM,WAAO,IAAD,EAGY1C,mBAAS,CAAC,YAHtB,mBAGhBF,EAHgB,KAGJC,EAHI,KAKvB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CACIA,aAAeA,EACfD,WAAcA,IAGlB,6BAEQA,EAAWwB,KAAI,SAAAT,GAAS,OACxB,cAAC,EAAD,CAEAA,UAAWA,GADJA,Y,MCf3B8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f94e87a6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({categorias, setCategoria}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const hangleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategoria ([ inputValue, ...categorias]);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= {hangleInputChange}\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async (categoria) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=PtagoWQQpNtN0Ac9gNr6Z7LSyT5wZonQ`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    \r\n    return gifs;\r\n  };\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInRight animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n  const {data, loading} = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"card animate__animated animate__lightSpeedInRight animate__delay-2s\">{categoria}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {data.map((imagen) => (\r\n          <GifGridItem key={imagen.id} {...imagen} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategoria] = useState([\"Pokemon\" ]);\r\n\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n\r\n            <AddCategory \r\n                setCategoria= {setCategoria}\r\n                categorias = {categorias}\r\n            />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                    <GifGrid \r\n                    key = {categoria}\r\n                    categoria={categoria}\r\n                    />\r\n                ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}